x <- 1
print(x)
y <- ##test
"hello"
y
1:20
Died.At <- c(22,40,72,41)
Writer.At <- c(16, 18, 36, 36)
First.Name <- I(c("John", "Edgar", "Walt", "Jane"))
Second.Name <- I(c("Doe", "Poe", "Whitman", "Austen"))
Sex <- c("MALE", "MALE", "MALE", "FEMALE")
Date.Of.Death <- as.Date(c("2015-05-10", "1849-10-07", "1892-03-26","1817-07-18"))
writers_df <- data.frame(Died.At, Writer.At, First.Name, Second.Name, Sex, Date.Of.Death)
str(writers_df)
names(writers_df) <- c("Age.At.Death", "Age.As.Writer", "Name", "Surname", "Gender", "Death")
attach(writers_df)
search()
Ages <- writers_df[, 1:2]
Ages
class(Ages)
mode(Ages)
apply(Ages,2,median)
apply(Ages,2,mean)
writers_df[1:4, 1:1]
class(writers_df[1:4, 1:1])
class(writers_df[1:4, 1])
writers_df[1:4, 1]
writers_df[1:4, 1, drop=FALSE]
writers_df
subset(writers_df, name=="Jane")
subset(writers_df, Name=="Jane")
writers_df[writers_df$Age.At.Death>40,]
writers_df[order(writers_df$Age.As.Writer)]
writers_df[order(writers_df$Age.As.Writer), ]
writers_df[order(writers_df$Age.At.Death), ]
writers_df[order(writers_df$Name), ]
dummyCol <- c("10","40","30","20")
cbind(writers_df, dummyCol)
str(writers_df)
writers_df <- cbind(writers_df, dummyCol)
str(writers_df)
writers_df[order(writers_df$dummyCol), ]
writers_df$dummyCol <- c("10",NA,"40","20")
writers_df
writers_df[order(writers_df$dummyCol), ]
writers_df[order(writers_df$dummyCol), ][1,]
writers_df[order(writers_df$dummyCol), ][1,2]
writers_df[order(writers_df$dummyCol), ][1,1]
getwd()
setwd("/Users/xizhang/Documents/datasciencecoursera/PA3_data")
getwd()
outcome <- read.csv("outcome-of-care-measures.csv")
dim(outcome)
str(outcome)
outcomeTx <- subset(outcome, outcome$State=="TX")
dim(outcomeTx)
outcomeTx[,11]
outcomeTx[order[outcomeTx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack], ][, 11]
order[outcomeTx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack]
as.numeric(outcomeTx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcomeTx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack
as.numeric(outcomeTx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
str(outcome)
outcomeTx <- subset(outcome, outcome$State=="TX")
dim(outcomeTx)
outcomeTx[,11]
as.numeric(outcomeTx[,11])
outcomeTx <- as.numeric(outcomeTx[,11])
outcomeTx <- subset(outcome, outcome$State=="TX")
outcomeTx[,11] <- as.numeric(outcomeTx[,11])
str(outcomeTx[,11])
outcomeTx[order(outcomeTx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), ][, 11]
outcomeTx[order(outcomeTx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), ][1,2]
outcomeTx <- subset(outcome, outcome$State=="TX")
outcomeTx[,11]
outcomeTx[order(outcomeTx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), ][,11]
outcomeTx[order(outcomeTx$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack), ][1,2]
outcomeTx[order(outcomeTx[,11]), ][1,2]
best <- function(state, outcome) {
## Read outcome data
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
outcome[1,2]
}
best(1,2)
best <- function(state, ot) {
## Read outcome data
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
outcome[1,2]
}
best(1,2)
names(outcome)
best <- function(state, type) {
## Read outcome data
## Check that state and outcome are valid
if(type=="heart attack"){
return(11)
}else if(type=="heart failure"){
return(17)
}
## Return hospital name in that state with lowest 30-day death
## rate
}
best("BB","heart attack")
best("BB","heart failure")
best <- function(state, type) {
## Read outcome data
## Check that state and outcome are valid
typeCode <- NULL
if(type=="heart attack"){
typeCode <- 11
}else if(type=="heart failure"){
typeCode <- 17
}else if(type=="pneumonia"){
typeCode <- 23
}else{
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
}
best("BB","sdfs")
best("BB","heart attack")
outcome[["State"]]
nrow(outcome)
nrow(outcome) == 0
nrow(outcome) == 4706
best <- function(state, type) {
## Read outcome data
outcomeState <- subset(outcome, outcome$State==state)
if(nrow(outcomeState)==0){
stop("invalid state")
}
## Check that state and outcome are valid
typeCode <- NULL
if(type=="heart attack"){
typeCode <- 11
}else if(type=="heart failure"){
typeCode <- 17
}else if(type=="pneumonia"){
typeCode <- 23
}else{
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
}
best("BB","heart attack")
best("TX","heart attack")
writers_df
writers_df[order(writers_df$dummyCol), ]
writers_df$dummyCol <- c("10","10","10","10")
writers_df
writers_df[order(writers_df$dummyCol, writers_df$Age.At.Death), ]
writers_df[order(writers_df[, 7], writers_df[, 1]), ]
outcomeTx[order(outcomeTx[,11]), ][1,2]
outcomeTx[order(outcomeTx[,11], outcomeTx[,2]), ][1,2]
best <- function(state, type) {
## Read outcome data
outcomeState <- subset(outcome, outcome$State==state)
if(nrow(outcomeState)==0){
stop("invalid state")
}
## Check that state and outcome are valid
typeCode <- NULL
if(type=="heart attack"){
typeCode <- 11
}else if(type=="heart failure"){
typeCode <- 17
}else if(type=="pneumonia"){
typeCode <- 23
}else{
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
outcomeState <- outcomeState[order(outcomeState[, typeCode], outcomeState[, 2]), ]
outcomeState[1,2]
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
outcomeTx[order(outcomeTx[,17]), ][1:5,2]
outcomeTx[order(outcomeTx[,17]), ][1:5,c(2,17)]
outcomeTx[1:30,c(2,17)]
outcomeState[order(outcomeState[, 17], outcomeState[, 2]), ][1:10,c(2,17)]
outcomeTx[order(outcomeTx[, 17], outcomeTx[, 2]), ][1:10,c(2,17)]
outcomeTx <- outcome[outcome$State=="TX",]
outcomeTx
outcomeTx[,17]
summary(outcomeTx[,17])
summary(as.numeric(outcomeTx[,17]))
outcomeTxOrdered <- outcomeTx[order(outcomeTx[,17]),]
summary(as.numeric(outcomeTxOrdered[,17]))
outcomeTxOrdered[1,2]
outcomeTxOrdered[1:10,2]
outcomeTxOrdered[1:5,c(2,17)]
outcomeTxOrdered
outcomeTxOrdered[,17]
outcomeTx[,17] <- as.numeric(outcomeTx[,17])
outcomeTx[,17]
outcomeTxOrdered <- outcomeTx[order(outcomeTx[,17]),]
outcomeTxOrdered[1:5,c(2,17)]
best <- function(state, type) {
## Read outcome data
outcomeState <- subset(outcome, outcome$State==state)
if(nrow(outcomeState)==0){
stop("invalid state")
}
## Check that state and outcome are valid
typeCode <- NULL
if(type=="heart attack"){
typeCode <- 11
}else if(type=="heart failure"){
typeCode <- 17
}else if(type=="pneumonia"){
typeCode <- 23
}else{
stop("invalid outcome")
}
## Return hospital name in that state with lowest 30-day death
## rate
outcomeState[,typeCode] <- as.numeric(outcomeState[,typeCode])
outcomeState <- outcomeState[order(outcomeState[, typeCode], outcomeState[, 2]), ]
outcomeState[1,2]
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
